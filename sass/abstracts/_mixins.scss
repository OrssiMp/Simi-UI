/**
 * Mixins SASS - Fonctions réutilisables
 * Collection de mixins pour faciliter le développement
 */

// ============================================
// RESPONSIVE BREAKPOINTS
// ============================================

/// Mixin pour les media queries responsive
/// @param {String} $breakpoint - Nom du breakpoint (xs, sm, md, lg, xl, xxl)
@mixin respond-to($breakpoint) {
    @if map-has-key($breakpoints, $breakpoint) {
        $value: map-get($breakpoints, $breakpoint);
        @media (min-width: $value) {
            @content;
        }
    } @else {
        @warn "Le breakpoint `#{$breakpoint}` n'existe pas dans $breakpoints.";
    }
}

/// Mixin pour max-width media queries
@mixin respond-below($breakpoint) {
    @if map-has-key($breakpoints, $breakpoint) {
        $value: map-get($breakpoints, $breakpoint);
        @media (max-width: $value - 1px) {
            @content;
        }
    }
}

// ============================================
// BOUTONS
// ============================================

/// Génère un bouton avec couleur personnalisée
/// @param {Color} $bg-color - Couleur de fond
/// @param {Color} $text-color - Couleur du texte
/// @param {Color} $hover-bg - Couleur de fond au survol
@mixin button-variant($bg-color, $text-color: $white, $hover-bg: darken($bg-color, 10%)) {
    background-color: $bg-color;
    color: $text-color;
    border-color: $bg-color;
    
    &:hover,
    &:focus {
        background-color: $hover-bg;
        border-color: darken($hover-bg, 5%);
        color: $text-color;
    }
    
    &:active {
        background-color: darken($hover-bg, 5%);
    }
}

/// Bouton outline (bordure uniquement)
@mixin button-outline-variant($color) {
    background-color: transparent;
    color: $color;
    border-color: $color;
    
    &:hover,
    &:focus {
        background-color: $color;
        color: $white;
    }
}

// ============================================
// TYPOGRAPHIE
// ============================================

/// Taille de police responsive
/// @param {Number} $min-size - Taille minimale
/// @param {Number} $max-size - Taille maximale
@mixin fluid-type($min-size, $max-size) {
    font-size: calc(#{$min-size} + (#{$max-size} - #{$min-size}) * ((100vw - 320px) / (1920 - 320)));
}

/// Truncate text avec ellipsis
@mixin text-truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

/// Limiter le nombre de lignes
/// @param {Number} $lines - Nombre de lignes
@mixin line-clamp($lines) {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
}

// ============================================
// LAYOUT
// ============================================

/// Centrer un élément
@mixin center-absolute {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

/// Flexbox center
@mixin flex-center {
    display: flex;
    align-items: center;
    justify-content: center;
}

/// Grid auto-fit
/// @param {Number} $min-width - Largeur minimale des colonnes
@mixin grid-auto-fit($min-width: 250px) {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax($min-width, 1fr));
    gap: $grid-gutter-width;
}

// ============================================
// EFFETS VISUELS
// ============================================

/// Box shadow avec niveaux
/// @param {String} $level - Niveau d'ombre (sm, md, lg, xl)
@mixin box-shadow($level: 'md') {
    @if $level == 'sm' {
        box-shadow: $box-shadow-sm;
    } @else if $level == 'md' {
        box-shadow: $box-shadow;
    } @else if $level == 'lg' {
        box-shadow: $box-shadow-lg;
    } @else if $level == 'xl' {
        box-shadow: $box-shadow-xl;
    }
}

/// Transition personnalisée
/// @param {String} $property - Propriété à animer
/// @param {Number} $duration - Durée de la transition
@mixin transition($property: all, $duration: 0.2s, $timing: ease-in-out) {
    transition: $property $duration $timing;
}

/// Hover lift effect
@mixin hover-lift {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    
    &:hover {
        transform: translateY(-4px);
        box-shadow: $box-shadow-lg;
    }
}

// ============================================
// BORDURES ET ARRONDIS
// ============================================

/// Border radius personnalisé
/// @param {Number} $radius - Rayon de bordure
@mixin border-radius($radius: $border-radius) {
    border-radius: $radius;
}

/// Border sur un côté spécifique
@mixin border-side($side, $width: $border-width, $color: $border-color) {
    border-#{$side}: $width solid $color;
}

// ============================================
// ANIMATIONS
// ============================================

/// Fade in animation
@mixin fade-in($duration: 0.3s) {
    animation: fadeIn $duration ease-in;
}

@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

/// Slide in animation
@mixin slide-in($direction: 'up', $duration: 0.3s) {
    animation: slideIn#{capitalize($direction)} $duration ease-out;
}

@keyframes slideInUp {
    from {
        transform: translateY(20px);
        opacity: 0;
    }
    to {
        transform: translateY(0);
        opacity: 1;
    }
}

@keyframes slideInDown {
    from {
        transform: translateY(-20px);
        opacity: 0;
    }
    to {
        transform: translateY(0);
        opacity: 1;
    }
}

// ============================================
// UTILITAIRES
// ============================================

/// Clearfix pour floats
@mixin clearfix {
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}

/// Masquer visuellement mais garder accessible
@mixin visually-hidden {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

/// Reset de liste
@mixin list-reset {
    margin: 0;
    padding: 0;
    list-style: none;
}

/// Aspect ratio
/// @param {Number} $width - Largeur
/// @param {Number} $height - Hauteur
@mixin aspect-ratio($width, $height) {
    position: relative;
    
    &::before {
        content: "";
        display: block;
        padding-top: ($height / $width) * 100%;
    }
    
    > * {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }
}

// ============================================
// SCROLLBAR PERSONNALISÉE
// ============================================

/// Scrollbar stylisée
/// @param {Color} $thumb-color - Couleur du curseur
/// @param {Color} $track-color - Couleur de la piste
@mixin custom-scrollbar($thumb-color: $gray-400, $track-color: $gray-200) {
    &::-webkit-scrollbar {
        width: 8px;
        height: 8px;
    }
    
    &::-webkit-scrollbar-track {
        background: $track-color;
        border-radius: 10px;
    }
    
    &::-webkit-scrollbar-thumb {
        background: $thumb-color;
        border-radius: 10px;
        
        &:hover {
            background: darken($thumb-color, 10%);
        }
    }
}

// ============================================
// PLACEHOLDER
// ============================================

/// Style pour les placeholders d'input
@mixin placeholder {
    &::placeholder {
        @content;
    }
    
    &::-webkit-input-placeholder {
        @content;
    }
    
    &:-moz-placeholder {
        @content;
    }
    
    &::-moz-placeholder {
        @content;
    }
    
    &:-ms-input-placeholder {
        @content;
    }
}
